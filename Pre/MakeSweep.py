# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oi6d7q49EbbgX7W6A0z77VSnnLm7MeL4
"""


#・5秒間24000Hzまでsweepした後に10Hzまでsweepするがその後に分割して5秒間24000Hzまでsweepするだけのファイルを作成するコード

import numpy as np
from scipy.io import wavfile

# パラメータの設定
duration = 10.0  # サウンドの長さ（秒）
sample_rate = 48000  # サンプリングレート
frequency_start = 10  # 開始周波数（Hz）
frequency_end = 24000  # 終了周波数（Hz）

# 時間の配列を生成
t = np.linspace(0, duration, int(sample_rate * duration), endpoint=False)

# 開始から終了までの周波数の線形なスウィープを生成
frequency_sweep = np.linspace(frequency_start, frequency_end, len(t))

# サイン波を生成
sweep_sound = np.sin(2 * np.pi * frequency_sweep * t)

# サウンドを正規化
sweep_sound /= np.max(np.abs(sweep_sound))

# データを2分割
split_index = len(sweep_sound) // 2
sweep_sound_part1 = sweep_sound[:split_index]
sweep_sound_part2 = sweep_sound[split_index:]

# WAVファイルとして保存
wavfile.write("sweep_sound_part1.wav", sample_rate, sweep_sound_part1.astype(np.float32))
wavfile.write("sweep_sound_part2.wav", sample_rate, sweep_sound_part2.astype(np.float32))
